// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/reports/html/commons.gohtml
// templates/reports/html/default.gohtml
// templates/reports/html/timelog.gohtml

package tom


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataReportsHtmlCommonsgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\xeb\x6e\xdb\xbe\x15\xff\x9e\xa7\x38\xf0\x1f\x05\x9a\x42\x94\xe3" +
	"\xa4\x2d\x52\x35\x0d\xd6\xa6\xed\x56\x60\xc5\x86\xba\x7b\x00\x4a\xa4\x2d\x36\xbc\x08\x24\x1d\xc7\x15\xf2\xee\x03" +
	"\x75\xb1\x25\x8a\x92\x9d\x6e\xc9\x07\x4b\xe2\xb9\xfc\xce\x9d\x64\x59\x12\xba\x62\x92\xc2\x6c\xb9\x11\x02\xeb\xdd" +
	"\xec\xe9\xe9\x0c\x00\xa0\x2c\x11\xcc\x5f\xad\x95\xdd\x15\x34\x81\x35\xb3\xf9\x26\x8d\x33\x25\xe6\xbf\xb0\x34\x4a" +
	"\xaf\xe7\x6b\x65\x99\xa0\xed\x8f\xa6\x85\xd2\x36\xfe\x41\xcd\x86\xdb\x4f\x9b\xec\x9e\xda\x57\x73\x40\x4f\x4f\x67" +
	"\x95\xb4\x1b\x8b\x53\x4e\x21\xe3\xd8\x98\x0f\x33\xd3\xa8\xba\xad\xd6\xea\xf5\x54\x91\xdd\xe1\xbd\x2c\xd9\x2a\xfe" +
	"\x66\xfe\xad\xd5\x2f\x9a\x35\xf2\x1a\x60\x07\x16\x7d\xdb\xfb\x50\x7f\x24\xb7\x65\xc9\x16\xd7\x12\x66\x0d\xf3\xec" +
	"\xe9\xe9\x66\x6e\x49\x90\xb6\x05\x64\x99\xe5\x74\x76\x5b\x96\xf1\x4f\xf7\x14\xe2\xb8\x99\x77\xf5\x95\x25\x95\xa4" +
	"\x03\xc8\xe1\x05\xa9\x2c\xc4\x9f\xb1\xa5\x3f\xb0\x5c\xd3\xf8\x8b\x28\xec\xee\xb9\xa0\x7f\x32\x41\x41\x3b\xfe\xe4" +
	"\x34\xe0\x82\xa2\x8a\xbc\x42\x7f\x50\xfe\x9d\x49\x26\x30\x5f\x5a\xcd\xe4\xfa\xf9\xf6\x0c\x70\xf6\x30\x6a\x9c\xdd" +
	"\x53\x02\x4e\x79\x18\xa5\x87\xd0\x61\x13\x4c\x7e\xde\x68\x6c\x99\x92\x10\xb7\x4f\xf1\xdf\x5d\x58\xfb\xfc\x3e\x30" +
	"\xb6\x82\x3a\xb9\xfe\x55\x38\x16\x13\x2f\x73\xb5\xfd\xf2\x88\x33\xdb\x4a\x31\xf0\x5c\x2f\x57\xec\x60\x8f\xda\xf1" +
	"\x5c\x5b\x2a\xb9\x7f\xe0\xed\x79\x27\xfd\x6f\xe6\x55\xad\xdc\x9e\xb5\x54\x67\x87\x1a\xcd\x94\x10\x4a\xde\x2d\x97" +
	"\x6d\x95\xde\x18\xbb\x73\xb4\xad\xa4\x44\x2b\x65\xa1\xec\xe9\x46\x68\xa5\xa4\x45\x86\xfd\xa6\x09\x2c\x2e\x0b\xfb" +
	"\x3e\xb4\xbc\xc2\x82\xf1\x5d\x02\x33\xb3\x33\x96\x0a\xb4\x61\xb3\x08\x10\x2e\x0a\x4e\x51\xfd\x29\x82\x4f\x9c\xc9" +
	"\xfb\xef\x38\x5b\x56\xef\x5f\x95\xb4\x11\xcc\x96\x74\xad\x28\xfc\xe7\xdb\x2c\x82\x1f\x2a\x55\x56\x45\xf0\x0f\xca" +
	"\x1f\xa8\x65\x19\x8e\xe0\xa3\x66\x98\x47\x60\xb0\x34\xc8\x50\xcd\x56\x11\xcc\x3e\x3a\xa1\x70\xa7\xb8\xd2\xf0\x45" +
	"\xa8\x5f\x4e\xd3\x5e\x4c\xe0\xcb\x72\x27\x52\xc5\x67\x3e\xec\x2a\xf7\xfb\xd8\xff\xb9\xc9\x18\xc1\x70\xa7\xa4\x51" +
	"\x9c\xce\x22\xf8\xae\x24\xce\x54\x04\x42\x49\x65\x0a\x9c\xd1\x71\x21\x5b\xca\xd6\xb9\x4d\x40\x2a\x2d\x30\x7f\x7f" +
	"\xe6\x11\x66\x0e\x6e\x02\x29\xc7\xd9\xbd\x2f\x24\x5d\xb7\xcb\xdb\x9c\xd9\x80\x0e\xcb\x69\x4b\xf1\xd7\xd5\xe2\xed" +
	"\x9b\xf4\xb5\x4f\xa3\xd5\x16\x29\x42\xf6\x54\xb4\xfa\xf3\xa9\xaa\x55\xb4\x91\x1b\x43\x49\x02\x7f\x5d\xbf\x73\xff" +
	"\x03\x34\x4a\x13\xaa\x1b\x5a\x5e\x1b\xf5\x80\xf5\xcb\x3e\xfb\xf9\xc0\xc2\x2a\xed\xd0\x96\x11\x9b\x27\xb0\xb8\xb8" +
	"\x78\x31\xb0\xa3\x22\x20\xd8\xe2\xe3\x54\x36\x6f\x4d\xe9\xa8\x3e\x1f\xa5\x4d\xd7\x3d\xea\xd6\xa1\xe3\x0c\x6d\xb4" +
	"\x52\xc5\xc9\x28\x91\x8b\x6b\x9d\xf6\x17\xf1\xb5\xa6\x62\x60\x72\x33\x88\x7a\x2e\x6b\x31\xf4\x22\xd2\x01\xf2\x74" +
	"\x10\x92\x5b\xc1\xbd\x62\xeb\x94\x5a\x2d\x66\xff\xc1\xb3\xe5\xa8\x77\x52\x9c\xdd\xaf\xb5\xda\x48\x82\x4e\xf1\x4d" +
	"\xaf\x10\x3a\xaa\xeb\x4f\x61\xfc\xf5\x50\xee\x1b\xd0\x44\xb6\x96\xd0\x49\x09\x1f\xdd\xde\x63\x1c\x17\x86\x26\xd0" +
	"\x3e\xf5\x14\x1d\x34\xe5\x11\x58\xe2\xa9\xe2\x4c\x52\x94\x37\x81\x5c\xc4\x97\x6f\xaa\x10\x75\x29\x0a\x4c\x08\x93" +
	"\x6b\x17\xbf\x6a\x15\x16\x03\x92\x6e\x6f\x0b\x2f\xfa\x85\x1d\x72\x44\x1e\x57\x45\xea\x40\xd6\x4f\x1e\xd4\x01\x90" +
	"\x8b\x11\x39\xbe\x37\x5d\x3f\x40\x55\xe7\x71\x00\xb6\x1a\x17\x7d\x84\x96\x3e\x5a\x84\x39\x5b\xcb\x04\x38\x5d\x79" +
	"\xbd\xf9\x81\x6a\xd7\x46\x79\x4b\x91\x2a\x6b\x95\x08\xab\xf6\xbd\xeb\xf3\x5a\x55\x8c\x60\xa6\x98\x0c\x91\x8f\xa5" +
	"\x9f\x5f\xb2\x53\x69\xdd\x6f\x05\xa1\x84\xed\x56\xca\xa0\x6c\x43\x0c\x6d\x30\x3d\x96\xfa\x73\x38\xcb\xe3\x43\xdf" +
	"\x3a\x9e\xeb\x87\xee\x36\x29\x4c\x11\x02\x56\x27\xd2\xd9\x96\x33\x4e\x5e\x5e\x4a\xb4\x38\x07\x4b\xa2\x1e\x85\x9b" +
	"\xea\x41\xba\x53\xbd\x7d\x42\x13\x6a\xf4\x09\x6c\x35\x7b\x04\x4b\x12\xa9\xec\xcb\x84\x63\x63\x6b\x95\xe7\x91\x4f" +
	"\x92\x0f\x48\xc2\xd9\x8e\x74\x53\x9a\xbd\xba\xea\xaa\xae\x25\xa2\x50\xc5\x8c\x4e\x88\x2a\xe3\xd5\x03\xd5\x2b\xae" +
	"\xb6\x09\x50\xce\x59\x61\x98\xe9\x13\xb5\xeb\xe8\x31\x81\x9c\x11\x42\xe5\x74\x61\x08\x46\x08\xa7\x23\xfe\xc9\x5d" +
	"\x40\x07\xf8\xfa\x95\xd9\x6f\x0d\x1d\x03\xde\xbd\x7b\x11\x16\x5b\x69\x46\xae\x66\x3d\xc9\xe3\x25\x3d\x64\xaf\x3c" +
	"\x3c\xc1\x5f\xad\x8f\x98\x15\x70\x7a\xbf\xfa\x0e\xdb\x8e\xa9\x4a\x1a\x4e\xd0\x6e\x4b\x8d\xaf\x46\x83\x9f\x56\xa7" +
	"\x32\x03\xb7\x61\x2c\x3d\x29\x6f\x47\xa5\x34\x23\x38\x9c\x3d\x78\x63\x55\x68\xee\x24\x70\x55\x3c\x82\x51\x9c\x91" +
	"\xc6\xd8\xd0\x24\xf7\xac\x16\x58\xaf\x99\x4c\xe0\x02\x2e\xe0\x6a\xbc\x87\xef\x11\x0d\x3a\xea\x7e\x08\xc4\x6f\x26" +
	"\xcc\x49\xad\xb2\xd8\xdf\x16\xd4\xba\x91\x55\xc5\x54\x39\xb9\x6a\xdf\x0b\x70\x23\xd3\xfb\xe2\x03\x6a\x8c\xad\xa5" +
	"\x7a\x0e\x19\xee\x02\x47\xda\x47\xa6\xf8\x5e\x45\xd4\x7f\x0d\xab\x73\x39\xfd\x3f\xe8\x13\x4a\xd2\x9d\xeb\x49\xee" +
	"\xa4\x1b\x48\x99\xfe\x1e\xc6\xdf\xe4\x9f\x30\x13\xbc\x1d\xfd\xf9\xf8\xc0\xf5\xaa\x0b\x8e\x0d\xec\x81\x19\xc8\xcd" +
	"\x4e\xaa\x1b\x6b\x9a\xb7\xd3\xcb\xf9\xa8\xc2\x81\x89\xfd\x62\xed\xb7\x03\x41\xc7\x02\x77\x42\x5b\x18\x88\xfa\x43" +
	"\x39\xcf\x40\x5c\xf7\x8f\x60\xa1\xd4\x45\x7a\x39\x55\xa4\x16\x6b\x8b\x08\x76\x99\x54\x3f\x3b\xd4\xd5\x8b\x2a\x50" +
	"\x20\xb7\x04\x93\xcd\xa9\xe5\xed\x60\x9b\x78\x72\xd0\xa5\xb2\xd4\xf8\xc7\x6b\x61\x50\xbe\x2b\x72\x2a\x4d\xa8\x61" +
	"\xa1\x2d\x4d\xef\x99\x9d\x22\x19\x59\xea\x2a\x26\xcd\x25\x03\xfa\x4d\xb5\x9a\x8a\x8a\x77\xc4\x3b\xc8\x82\xea\x6a" +
	"\xa1\xb9\x2e\xa8\xdf\xaa\x17\x10\x94\x30\xfc\x61\x56\x68\x26\x6d\xe7\x46\xee\x6f\x05\x5e\x0f\x7c\xd8\x04\xe7\xf2" +
	"\x42\x84\x3b\x58\xb5\xdf\x39\xf9\xf6\xa1\x7b\x92\x5a\x4c\x4c\x8f\xeb\x31\xa6\xcb\x08\xf2\xab\x08\xf2\xd7\x13\xcc" +
	"\xaf\x47\x98\x27\xce\x3e\xc3\x3d\x8b\xf3\x05\x4a\x35\xc5\xf7\x88\x49\xc3\x08\x4d\x00\x3f\x28\x16\x4e\x6c\xeb\x77" +
	"\x80\xe3\xdc\x1e\x15\x5e\x59\x37\xe3\x46\xd3\xa1\xde\xb2\x8f\x2a\x49\xe9\x4a\xe9\x93\x95\x4c\x12\x4d\xe0\x25\xcc" +
	"\x14\x1c\xef\x92\xda\x93\x4d\xef\x43\x6e\x13\x3b\x72\xce\x08\x24\xc7\xff\x09\x74\x57\xcb\x6a\x78\x01\xf6\x6c\x2d" +
	"\xa7\x5b\xed\xe6\xf3\xc0\x64\xe8\x96\x5a\xe8\x16\x6f\x63\xac\x12\x9d\x5b\xbc\xb2\xdc\x32\x9b\x7b\xd7\x9c\x77\x2d" +
	"\x55\xf7\xa2\xd0\xbb\xee\xab\x99\xe3\xde\x55\x62\x87\x64\xaf\xfb\xb8\x92\xaf\x8c\xd3\xa3\x8a\x98\x74\x47\xf6\xbb" +
	"\xe5\x12\x8e\xaa\x6c\x7e\xff\x1b\x00\x00\xff\xff\xbf\xb8\xd5\x0a\x5f\x18\x00\x00")

func bindataReportsHtmlCommonsgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataReportsHtmlCommonsgohtml,
		"reports/html/commons.gohtml",
	)
}



func bindataReportsHtmlCommonsgohtml() (*asset, error) {
	bytes, err := bindataReportsHtmlCommonsgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "reports/html/commons.gohtml",
		size: 6239,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1549819834, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataReportsHtmlDefaultgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\x4f\x6f\xdb\x36\x14\xbf\xfb\x53\xbc\x09\x39\xa4\xc5\x2c\x21\xb7" +
	"\xa2\x50\x7c\x68\xb2\x0e\x03\xd6\x0d\x48\xb2\x1d\x76\xa3\x2d\xc6\xe2\x26\x89\x9e\x48\x37\xcd\x04\x7f\xf7\x81\x7f" +
	"\x45\x5a\xa4\x2c\x27\x2a\x5a\x5f\x64\x89\xe4\xe3\xfb\xf3\x7b\x8f\xbf\x27\x75\xdd\x12\xb2\xb7\x5b\xca\x9f\x77\xf8" +
	"\x3d\x6c\x09\x2f\xf7\xeb\x74\x43\xeb\xec\x6f\xd4\x30\xda\x6e\x33\x4e\xeb\x6c\x4b\x97\xe2\xd2\xe2\x1d\x6d\x79\x7a" +
	"\x87\xd9\xbe\xe2\x1f\xf6\x9b\x7f\x30\x7f\x9b\xc1\xf2\x70\x58\x2c\xba\xae\xc0\x8f\xa4\xc1\x90\xd4\xb4\xc1\xcf\xbf" +
	"\x12\xc6\x93\xc3\x61\x01\x00\xd0\x75\x2d\x6a\xb6\x18\x52\x7d\xaf\x9e\x3d\xd2\xb6\x46\xfc\x93\x98\x2c\x46\xf2\x75" +
	"\xbb\xd2\xb3\x71\x53\x1c\x0e\x0b\x73\x75\x24\x3f\xa0\x75\x85\xd5\xb6\xbd\xec\x39\xb4\x57\x92\x2e\xd6\xf2\x19\xbc" +
	"\xbf\xb6\xaa\x76\xdd\x05\x2b\xe9\xd3\x4f\x5f\xd0\x46\x3e\x57\x22\x7e\xdf\x71\x42\x1b\x96\xde\x9b\xa1\xdb\x7d\x8b" +
	"\xe4\x23\x10\x0a\x9f\xab\x57\xc9\xeb\x4a\x09\xce\xb4\x64\x5f\x2d\xba\xe3\x6c\xb0\xb9\xdd\x29\xe7\xc2\x2b\xb0\xa9" +
	"\x10\x63\xd7\x89\xbc\x59\xd2\xa2\x48\x56\xd6\xd7\x39\x2f\x31\x2a\xdc\xfb\xb6\xbf\xd1\x13\xec\xfa\x72\xf9\x44\x0a" +
	"\x9c\xac\x72\xb6\x43\x8d\x7d\x4a\x78\x85\x93\x55\xd7\xa5\x0f\xe2\xdf\xe1\x90\x67\x62\x78\x95\x67\xbc\xf4\x45\x75" +
	"\x1d\x79\x04\xa9\xb1\xf4\xce\x3d\xaa\x30\x73\xc2\x7e\xb4\x9b\x84\xca\x52\x68\x87\x5b\x21\x9e\x5c\xbd\x6b\x20\x91" +
	"\x8b\x12\xb1\xc9\x50\xba\xc2\x44\x4c\x79\x52\xe3\x81\x34\x13\x9b\x88\x40\xa1\xae\x0d\xf1\x91\xe8\x89\x06\x4d\x36" +
	"\x4c\xc1\x88\x45\xcd\x8b\x99\x38\xc5\x4c\x25\xbb\x18\x37\xd6\x17\x9d\x67\x2e\x10\xc4\xfc\x23\x98\xac\x69\xf1\xbc" +
	"\x72\x52\x56\xa5\xb1\x4e\x93\xf4\xa6\x24\x55\xa1\xd2\x68\x18\xe2\x76\x68\x59\xce\x0b\x0f\x41\xbc\x08\x59\x1f\xf2" +
	"\x76\xce\x0b\xcf\xb1\xc2\x6a\x8e\xeb\x5d\x85\xb8\x57\x6f\x20\x95\x0b\xd2\x3b\xba\x6f\x0a\x5c\xe8\x4d\xe2\x1e\x2d" +
	"\x5c\x8f\x0a\xa1\x35\x69\x0c\x5c\x20\x35\xff\xd2\x9f\x31\x1f\xd7\x77\x0c\x3f\xf3\x59\xa5\x77\x18\xb5\x29\x68\x57" +
	"\x70\x96\xd2\x2b\x6a\xf0\x98\x39\x31\x57\x04\x72\xd3\x43\x58\x00\x7f\x3e\xc2\x72\xfe\x48\x29\xf7\x0a\x95\xb1\xa4" +
	"\xa5\x4f\x4b\xb6\x5f\x73\xca\x51\x95\x0c\xaa\x97\xcd\x82\x07\x39\x1e\xcf\xf4\x61\x0c\xfc\x94\x85\xe3\xc4\x0d\x06" +
	"\xc4\x64\xc0\x10\x6d\x65\x30\x32\x47\xb9\x0b\x47\x09\xec\x06\xc1\x88\x1e\x80\x6f\xa6\xc2\x35\x87\xc1\x3d\x10\xc3" +
	"\xe6\xce\x60\xb2\xbb\xc5\x79\x35\xac\x47\x50\x9e\xc9\xc3\x70\x15\x62\x12\x9f\x10\x6f\xc9\x97\xef\x9e\x4a\xb8\xeb" +
	"\xea\x1d\x7f\x1e\xae\xbb\x53\x8a\xdc\x9b\x19\x63\xac\xa0\x40\x1c\x81\x25\x08\xfa\x5f\x2d\x3d\xf1\x42\xb6\xa0\x16" +
	"\x2f\x35\x3d\x78\x31\x65\x78\x22\xbc\xb4\x30\xf8\x48\x5a\xc6\x7f\xa3\x8d\x34\x47\x9e\x31\x41\x70\xcf\x15\x2b\x5f" +
	"\xaa\x26\xaa\x23\x47\x5b\x04\xe0\x0e\xb6\x9d\x13\x6e\xe2\xf9\xfe\x12\x5a\x13\xae\x74\x5f\xef\x48\x97\xe5\x84\xb6" +
	"\x70\x89\x9a\x02\x1c\x44\xa6\xf2\xf2\x06\x2e\x1b\xca\xcd\x4d\xb0\x1e\x04\x18\x01\x8c\xa0\x09\xe4\xe5\x3a\xe9\xfd" +
	"\x39\xf4\x6d\xe4\xb0\x9d\x1e\x44\x38\xeb\xb8\xb4\x6e\xe8\x4b\xd5\x2f\x4c\x57\xff\xbf\x70\x4b\x47\x36\xb1\x9b\xb9" +
	"\x29\x62\xc8\xda\xf2\x3f\xdc\xd2\x93\xf4\x43\x66\xcf\xc9\x0d\x44\x62\x78\x27\x43\x10\xe8\x41\xd5\xd6\x91\x08\x7d" +
	"\x03\x1b\xe2\xe4\xc6\x99\x53\x31\x3c\xd5\xe3\xdf\x83\x6f\xa5\x22\x93\x66\x9b\x9f\x76\x71\xd7\x81\x4a\x79\x0d\xb5" +
	"\x9e\xe4\x83\x4a\x8a\x53\x24\x6e\x66\xbf\x8f\xce\x09\x73\x43\x77\xe5\xa9\x2a\xb0\xa1\x95\x65\x7a\xd0\x73\x07\x4b" +
	"\xfe\x42\x85\xe1\x25\x0c\x77\xc4\x88\xf3\x03\x6d\x03\x3c\x29\x68\xb3\x44\x6d\xb4\x05\x08\x1e\x3d\xfe\xe1\x10\x92" +
	"\xf1\xf5\x18\x7a\x98\x31\x4c\xa1\xed\xfa\x84\x22\x3f\x5e\x6c\x44\x41\x17\x14\x28\x4e\x15\x4e\x15\xfd\xae\xbb\x30" +
	"\x81\x10\x82\xd8\xbe\x96\x0b\xfe\x44\xd5\x1e\x33\x23\x17\x2e\xc8\x54\x46\x1b\x31\xd8\xae\xd1\xc5\xe7\xd2\xe3\xbb" +
	"\x85\x13\xec\x37\xe3\x81\x3e\x0f\x89\xaf\x44\xa1\xa7\xd8\x04\x14\x46\xb9\xff\x2b\xde\xdb\x40\x24\xfd\x63\x5e\x9e" +
	"\xd2\x3d\x05\xd9\xe3\x34\xaf\xbe\xd6\xa3\x63\xad\x4d\xd8\xb1\x91\x36\x7a\x8c\xe3\x4d\x6b\x79\xbe\x49\xb3\x73\x66" +
	"\xd3\x52\x90\xcf\xc6\xd1\x4a\x66\xe2\x72\x55\xf2\x08\x82\x7c\x0e\x1b\x27\xd5\xcd\xc9\xb7\xc3\x0c\x2e\x09\x53\xf7" +
	"\x36\x9d\x25\x35\xed\xf5\x79\x73\xcc\x4f\xdd\xa6\xd7\x6b\x0c\xad\x04\xbf\x44\x56\x0c\x0b\xf8\xe0\x7f\xfb\xf8\xe2" +
	"\x1d\x2f\xe1\x0a\x46\x04\xbb\xef\xae\xcd\xba\x81\xd8\x10\xe7\x4e\x8d\x8b\x86\x48\xd1\x0e\xb9\x1c\xf7\xae\xe1\xe6" +
	"\xb7\x88\xe3\x3b\x51\x4c\xe3\x2c\xfd\x38\x08\xb2\x4c\x83\xac\xc0\x92\x7d\x5b\x11\x02\xbf\x05\xf9\x3c\xb9\xbd\x09" +
	"\x73\xb5\x61\xbc\xd9\x58\x21\x3d\xd5\x5a\xce\xd2\x0e\xb8\x31\x33\xe1\x4a\xa3\xef\xf5\x62\x05\x70\xe0\x9b\xb1\x93" +
	"\x56\x4f\xb7\x39\x9b\xff\x50\xd0\x8d\x48\x4c\x28\x79\x5d\xad\x16\xb9\xb8\x40\x85\x9a\xad\xac\x3f\xe2\xcf\x07\xc4" +
	"\xb0\x64\x7f\x8b\xbc\xef\xf0\xf2\x1a\x73\x04\x9b\x12\xb5\x0c\xf3\xeb\xe4\x8f\x87\x8f\xcb\x77\x89\xf9\xa8\x22\x7b" +
	"\x6c\x1f\x28\x37\x7b\xc6\x69\xad\x7d\xe8\x1c\xe9\xe2\xc1\xaa\xeb\x20\x05\x79\x22\xcb\xdb\x05\x1c\x53\x38\xd7\x51" +
	"\x1b\x5a\xd7\xb4\xb9\xb9\xbf\xef\xcb\x8b\x33\x28\xb7\xd1\x83\x79\xa6\xf4\xcd\x15\xaf\x58\xcc\xf2\x9d\x64\xf4\x1b" +
	"\x89\x79\xbd\x20\xdf\x84\x39\x26\x9b\x64\xcd\xcb\x2b\x01\x25\x61\x6a\x79\xe5\x55\xce\xc1\xba\x5b\xcc\x36\x2d\x91" +
	"\xb2\xed\xea\x9d\xed\x84\xfa\xc1\xc4\x08\xdc\x79\xf2\xfc\xf7\x71\xfb\xba\x46\xed\x33\x04\x1c\xa6\x87\x12\xd0\x25" +
	"\xd7\xf9\x18\x16\x44\xa7\x9d\x95\x67\xca\xab\xb9\x74\xd5\xea\xff\x00\x00\x00\xff\xff\xdd\x94\x15\x4c\xda\x1b\x00" +
	"\x00")

func bindataReportsHtmlDefaultgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataReportsHtmlDefaultgohtml,
		"reports/html/default.gohtml",
	)
}



func bindataReportsHtmlDefaultgohtml() (*asset, error) {
	bytes, err := bindataReportsHtmlDefaultgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "reports/html/default.gohtml",
		size: 7130,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1549819926, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataReportsHtmlTimeloggohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xcd\x8e\xe3\x36\x0c\xbe\xfb\x29\x58\x63\x0f\xed\x00\xb6\x31\x28" +
	"\x0a\x2c\x16\x4e\x0e\xf3\x57\xf4\xd2\x16\x9b\xf4\x01\x14\x8b\x63\xab\x6b\x4b\x86\xc4\xec\x34\x30\xfc\xee\x85\x24" +
	"\xff\x24\x19\xdb\x93\x64\x73\x88\x2c\x91\xfc\xf8\x2f\xb1\x69\x22\x48\xee\x72\x45\x87\x1a\xbf\x40\x2e\xa8\xd8\xef" +
	"\xe2\x4c\x55\xc9\xbf\x4c\x1a\xa5\xf3\x24\x57\x24\x2a\xec\x17\x8d\xb5\xd2\x14\x3f\xec\xb3\x6f\x48\x5f\xdd\xe6\x2e" +
	"\x81\xa8\x6d\x83\xa0\x69\x38\xbe\x0a\x89\x10\x7a\x6a\xd8\xb6\x01\x00\xc0\x87\x1a\x48\x55\x49\xae\x22\xbb\x74\xf0" +
	"\x5f\xd1\xec\x4b\xf2\x30\x1d\xbc\x47\xfa\xb4\x73\x67\xf0\x65\x05\xf1\x78\x68\x0a\xf5\xf6\x5c\xd5\x74\xb0\xe7\x1e" +
	"\xe2\xaf\x9a\x84\x92\x26\xf6\x26\xc6\x9b\x9e\xc3\x1a\x6a\xa5\x52\x2e\xbe\x43\x56\x32\x63\x56\xa1\xc7\x0c\xd7\x8e" +
	"\xe0\x21\xc5\x2b\x74\xaa\xe2\x5e\x0c\x8e\x7e\x8e\x41\x69\xf8\x59\x2a\x3a\x65\xdc\xa8\xbd\xce\xf0\x17\x18\x6d\x3a" +
	"\x13\x75\xca\x89\xed\x4a\xec\xd5\xbb\x4d\xc4\x19\x31\xf0\x9f\x8a\xf3\x23\x63\x4e\x05\x0b\x64\x7c\x8e\xa6\xa7\x09" +
	"\xde\xe0\xe4\x0e\xab\x1d\x72\x8e\x1c\x48\x50\x89\x40\x0a\xbe\x21\xd6\xdd\x8e\x49\xee\xb5\x1b\x20\x95\x23\x15\xa8" +
	"\x41\x48\xa8\xb5\x90\x84\x1c\xfe\x7e\x7a\x31\x77\xc9\x84\x2b\x47\x96\x41\xa6\x4a\x53\x33\xb9\x0a\x7f\x0b\x07\xdf" +
	"\x2c\x78\xb8\x1e\x12\x17\x6f\xed\x41\xdb\x8e\xa9\x8c\x37\x75\x29\xe8\xe1\xb0\x3d\xd4\xd8\xb6\x69\x42\xc5\x8c\x7b" +
	"\xc9\x9c\x7f\x8b\x8e\x3b\xbb\xbc\x2d\x9c\x11\x46\x36\x7e\xa8\xad\x45\xe2\xfe\xb3\x84\xf0\x89\x11\x86\x4b\x7a\x2f" +
	"\x01\xd9\x10\xd3\xf4\xc3\x28\xcf\x92\x5f\x83\x61\xdb\xf1\xbd\x3b\x7b\xcd\x6c\xe1\x5f\x05\x54\x44\x6f\x82\xe3\x08" +
	"\xf2\xa7\x22\x34\x8b\x08\x0b\xc9\x48\x16\x4b\x74\xa7\xf8\x61\x9a\xd6\x34\x9a\xc9\x1c\x87\x6e\x7a\xd1\xac\x42\xd3" +
	"\x2d\x8b\x85\xb7\x90\x7d\xcf\xc0\x7b\x4f\x8d\xcd\x53\xc4\xd9\xc1\xfa\xfa\xaa\x74\xc5\xc8\xe6\x1f\x62\x97\x40\xe7" +
	"\xf0\x8c\xe5\xb3\x60\x36\x0b\x23\xda\x56\x54\x37\xa3\xa9\xba\x03\x5b\x14\x81\xfe\xf6\x89\xff\x30\x1b\x52\x75\x8d" +
	"\x7c\x21\x38\x93\x52\x42\xe6\x25\x3e\xb1\xa9\x8b\x69\x5e\xf6\xd8\xbf\x67\x79\xb9\x4e\x2c\x0d\xde\xa0\xc8\xa6\xe5" +
	"\x06\x65\x17\xf1\x5e\xc2\x77\x55\xee\xfa\x1a\xa8\x84\xec\xfb\x0f\xe2\xfe\xeb\xca\x3a\x90\xae\xf7\xd6\x4d\x13\xbb" +
	"\x2e\xfc\x48\x7a\xbe\x11\x97\xbc\x4c\x93\x85\x46\x4c\xe9\x55\x29\x1a\xea\x72\xbf\x23\x45\xac\x9c\x7d\x90\x74\xcf" +
	"\xa9\xd5\x5b\xf4\x01\x37\x9c\x3f\x14\xbf\x8e\x97\xce\xd6\xc9\x5d\x71\x6d\x65\xaa\x1c\xf4\x81\x4d\x81\xfb\x3b\x32" +
	"\x61\x26\x21\xf1\xef\x48\xcf\xff\xb1\x8c\x2e\xd0\xb5\xbe\xf1\x0a\xb4\x11\x7c\x4f\x4c\x13\xf7\xc2\xae\xcf\x46\x89" +
	"\xd3\x3c\x4d\xb6\xcc\xf1\xb4\x32\xf7\xa4\xa6\x09\x17\xdf\xcf\xb1\x4f\xef\xd4\xc7\x42\x94\xdc\x4f\x55\x53\x57\x6a" +
	"\xd3\x10\x56\x75\x69\x6f\xc4\x7e\x84\x1b\xa6\xac\x05\x73\x87\x7d\x67\x41\x7f\x14\x5c\x33\xf8\x15\x54\x95\x7e\x72" +
	"\x4b\xba\xd1\xad\x9b\xfb\x9a\xe6\x93\xaa\xc9\xbc\x9b\xec\xc0\x6a\x48\x7f\xe2\x2a\xb3\xf0\x60\xe5\xd7\x41\x6a\x17" +
	"\x28\x99\xcc\x57\x61\xd3\xb8\x8f\x07\x66\x10\xda\x36\xb4\xc4\xe1\x61\x4a\x2b\x24\x06\x59\xc1\xb4\x41\x5a\x85\xff" +
	"\x6c\x5f\xa2\xcf\x5d\xcd\x36\xcd\x9b\xa0\x02\x9c\xd2\xf8\x71\x6f\x48\x55\x5d\x80\x83\xb1\x30\xec\x81\xed\x51\x57" +
	"\x42\x6e\x13\x1c\x07\x23\x38\x8f\x66\xa6\xaa\x4a\xc9\xc7\xcd\x66\x9c\x89\x8f\x88\x4e\x49\x47\x4c\x13\x6f\x65\xea" +
	"\x1b\x34\x98\x33\x07\xfa\x98\x17\xf7\xbd\x21\xc5\xfd\x49\xec\xdf\xc9\x3d\xa1\xc9\xb4\x70\xd1\x1b\xa4\xeb\x61\x22" +
	"\x19\x89\x61\x0f\x58\x9f\xe0\xd9\x91\xd8\xa1\xd9\x59\x7a\xb3\xaf\x2a\xa6\x0f\x30\xe1\x4e\x47\x0a\xa1\x9b\xe2\x5d" +
	"\x0e\x07\x94\x89\x0a\x1b\xd8\xd2\xc4\x3b\x9d\xba\x6a\x58\xff\x1f\x00\x00\xff\xff\x42\x08\x63\x62\x9a\x0c\x00\x00" +
	"")

func bindataReportsHtmlTimeloggohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataReportsHtmlTimeloggohtml,
		"reports/html/timelog.gohtml",
	)
}



func bindataReportsHtmlTimeloggohtml() (*asset, error) {
	bytes, err := bindataReportsHtmlTimeloggohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "reports/html/timelog.gohtml",
		size: 3226,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1549139854, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"reports/html/commons.gohtml": bindataReportsHtmlCommonsgohtml,
	"reports/html/default.gohtml": bindataReportsHtmlDefaultgohtml,
	"reports/html/timelog.gohtml": bindataReportsHtmlTimeloggohtml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"reports": {Func: nil, Children: map[string]*bintree{
		"html": {Func: nil, Children: map[string]*bintree{
			"commons.gohtml": {Func: bindataReportsHtmlCommonsgohtml, Children: map[string]*bintree{}},
			"default.gohtml": {Func: bindataReportsHtmlDefaultgohtml, Children: map[string]*bintree{}},
			"timelog.gohtml": {Func: bindataReportsHtmlTimeloggohtml, Children: map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
